% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Bar.R
\name{Bar}
\alias{Bar}
\title{Bar chart}
\usage{
Bar(x_offset = NULL, x_labelOffset = NULL, x_showLabel = NULL,
  x_showGrid = NULL, x_labelInterpolationFnc = NULL, y_offset = NULL,
  y_labelOffset = NULL, y_showLabel = NULL, y_showGrid = NULL,
  y_labelInterpolationFnc = NULL, y_scaleMinSpace = NULL, width = NULL,
  height = NULL, low = NULL, high = NULL, chartPadding = NULL,
  seriesBarDistance = NULL, fullWidth = NULL, centerBars = NULL,
  stackBars = NULL, classNames = NULL, responsiveQuery = NULL)
}
\arguments{
\item{x_offset}{offset of the X-axis}

\item{x_labelOffset}{offset of the each X-axis label (e.g. 1, c(1,2), list(x=1, y=2))}

\item{x_showLabel}{if X-axis labels should be shown or not}

\item{x_showGrid}{if X-axis grid should be drawn or not}

\item{x_labelInterpolationFnc}{JS function to intercept the value from the X-axis label}

\item{y_offset}{offset of the Y-axis labels to the chart area}

\item{y_labelOffset}{offset of the X-axis labels (e.g. 1, c(1,2), list(x=1, y=2))}

\item{y_showLabel}{if Y-axis labels should be shown or not}

\item{y_showGrid}{if Y-axis grid should be drawn or not}

\item{y_labelInterpolationFnc}{JS function to intercept the value from the Y-axis label}

\item{y_scaleMinSpace}{minimum height in pixel of the scale steps}

\item{width}{fixed width for the chart as a string (i.e. '100px' or '50\%')}

\item{height}{fixed height for the chart as a string (i.e. '100px' or '50\%')}

\item{low}{lower limit of value}

\item{high}{higher limit of value}

\item{chartPadding}{padding of the chart drawing area to the container element and labels}

\item{seriesBarDistance}{distance in pixel of bars in a group}

\item{fullWidth}{When set to true, the last grid line on the x-axis is not drawn and the 
chart elements will expand to the full available width of the chart. For 
the last label to be drawn correctly you might need to add chart padding
or offset the last label with a draw event handler.}

\item{centerBars}{if bars are drawn on the grid line rather than between two grid lines}

\item{stackBars}{if series bars are stacked or not
(in stacked mode the seriesBarDistance property will have no effect).}

\item{classNames}{Override the class names that get used to generate the SVG structure of the chart}

\item{responsiveQuery}{if specified, the options are used only when the query matches.}
}
\description{
The Chartist bar chart can be used to draw unipolar or bipolar bar and grouped bar charts.
}
\examples{
\dontrun{
set.seed(324)
data <- data.frame(
  day = 1:10,
  A   = runif(10, 0, 10),
  B   = runif(10, 0, 10),
  C   = runif(10, 0, 10),
  D   = runif(10, 0, 10)
)

chartist(data[1:6, ], day) + Bar()

chartist(data, day) + Bar(stackBars = TRUE)

# responsive chart
chartist(data, day) +
  # By default, draw a normal bar chart
  Bar(stackBars = FALSE) +
  # For smaller screens, draw a stacked bar chart
  Bar(stackBars = TRUE, responsiveQuery = "screen and (max-width: 600px)")
}

}
\seealso{
\url{http://gionkunz.github.io/chartist-js/api-documentation.html#chartistbar-function-bar}
}

